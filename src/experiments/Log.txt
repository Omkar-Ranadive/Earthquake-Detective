------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'model_Exp1_13_08_2020-14_20_46_90.pt'

Confusion Matrix:
[[747   0   6]
 [397   0  85]
 [ 12   0  27]]
Accuracy: 0.6075353218210361


-> Is able to detect tremors but cannot understand noise 
# Hyper parameters
num_epochs = 100
batch_size = 500
learning_rate = 1e-4
# Structure: 
self.conv1 = nn.Conv1d(3, 6, kernel_size=50, stride=2)
self.pool1 = nn.MaxPool1d(kernel_size=30)
self.conv2 = nn.Conv1d(6, 8, kernel_size=50, stride=2)
self.pool2 = nn.MaxPool1d(kernel_size=3)
self.fc1 = nn.Linear(376, 128)
self.fc2 = nn.Linear(128, 3)


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'model_Exp1_13_08_2020-14_41_17_90.pt'

Confusion Matrix:
[[202 551   0]
 [110 372   0]
 [  3  35   1]]
Accuracy: 0.4513343799058

-> Is able to detect noise, but also misclassifies lot of earthquake as noise 
num_epochs = 100
batch_size = 500
learning_rate = 1e-4

self.conv1 = nn.Conv1d(3, 6, kernel_size=50, stride=2)
self.pool1 = nn.MaxPool1d(kernel_size=20)
self.conv2 = nn.Conv1d(6, 8, kernel_size=25, stride=2)
self.pool2 = nn.MaxPool1d(kernel_size=3)
self.fc1 = nn.Linear(632, 128)
self.fc2 = nn.Linear(128, 3)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'model_Exp1_13_08_2020-15_56_24_60.pt'

Went up to 70% accuracy during training 

num_epochs = 100
batch_size = 500
learning_rate = 1e-4

Confusion Matrix:
[[744   9   0]
 [335  98  49]
 [  5   3  31]]
Accuracy: 0.685243328100471

Good separation 

self.conv1 = nn.Conv1d(3, 6, kernel_size=75, stride=2)
self.pool1 = nn.MaxPool1d(kernel_size=10)
self.conv2 = nn.Conv1d(6, 8, kernel_size=50, stride=2)
self.pool2 = nn.MaxPool1d(kernel_size=3)
self.fc1 = nn.Linear(1264, 128)
self.fc2 = nn.Linear(128, 3)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
model_Exp1_24_08_2020-20_45_52_90.pt

self.conv1 = nn.Conv1d(3, 6, kernel_size=75, stride=2)
self.pool1 = nn.MaxPool1d(kernel_size=10)
self.conv2 = nn.Conv1d(6, 8, kernel_size=50, stride=2)
self.pool2 = nn.MaxPool1d(kernel_size=3)
self.fc1 = nn.Linear(1264, 128)
self.fc2 = nn.Linear(128, 3)

Using new trimmed tremor data 

Confusion Matrix:
[[374 379   0]
 [113 369   0]
 [  3   3  36]]
Accuracy: 0.6100234925606891

Better at separating tremors. This time, between Earthquake and Noise it did a better job of separating noise than earthquake. 
So it gets biased towards one of them. 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

model_Exp1_25_08_2020-15_04_46_90.pt

num_epochs = 100
batch_size = 500
learning_rate = 1e-4


self.conv1 = nn.Conv1d(3, 6, kernel_size=75, stride=2)
self.pool1 = nn.MaxPool1d(kernel_size=10)
self.conv2 = nn.Conv1d(6, 8, kernel_size=50, stride=2)
self.pool2 = nn.MaxPool1d(kernel_size=3)
self.fc1 = nn.Linear(1264, 128)
self.fc2 = nn.Linear(128, 3)


Averaging samples of earthquake data to len = 20000 

Confusion Matrix:
[[473 280   0]
 [157 317   8]
 [  3   9  30]]
Accuracy: 0.6421299921691465

-> Accurary and loss were not stagnating - so could be trained more 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

model_Exp1_25_08_2020-15_39_43_30.pt

Training accuracy went upto 79% 
This model was initialized with weights of model_Exp1_25_08_2020-15_04_46_90.pt

Confusion Matrix:
[[725  28   0]
 [239 238   5]
 [  3   0  39]]
Accuracy: 0.7846515270164448



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

model_Exp2_02_09_2020-21_41_00_90.pt

num_epochs = 100
batch_size = 50
learning_rate = 1e-4


Log Scattering transform 
Training accuracy - 84.9% (Non-stagnating)

def __init__(self):
	super(WavNet, self).__init__()

	# self.pool1 = nn.MaxPool1d(kernel_size=20)
	self.fc1 = nn.Linear(2361, 128)
	self.fc2 = nn.Linear(128, 3)


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Continuing the training of model_Exp2_02_09_2020-21_41_00_90.pt

After 200 epochs (Total 300 epochs) -  0.8857264957264958 model_Exp2_02_09_2020-21_55_20_180.pt 

After 300 epochs (Total 400 epochs) - 0.9186 model_Exp2_02_09_2020-21_57_32_270.pt

Confusion Matrix:
[[753   0   0]
 [103 379   0]
 [ 12  30   0]]
Accuracy: 0.8864526233359437

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

model_Exp2_05_09_2020-17_47_31_270.pt

J=8, Q=32

Train and Test sets with model shown before: 
81% training, 78% testing accuracy 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Models with more data 

model_Exp4_24_09_2020-22_04_14_99

WavCon net (Wavelet transforms + conv) -> 65% 


model_Exp4_24_09_2020-16_26_52_99
Wav Net (Wavelet transform only) -> 63% 

In both cases, accuracy stagnates quickly. Main problem -> Unable to distinguish between noise and earthquakes 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Doesn't work well with Earthquake Det only data -> Everything collapses to a single label (without averaging; greater noise)
Even if excerpt len is increased to 40k 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

If the EQ detective data is combined with "clean" noise and earthquake data; the classification improves for Earthquake and Noise. But then the Tremor accuracy reduces. 


Faster learning rate -> 1e-4 
model_Exp5_29_09_2020-15_26_09_199.pt

Testing Accuracy 0.7283441558441559 Testing Loss 0.828766331076622
Confusion Matrix for testing set:  
[[ 193.   11.    0.]
 [  88.   76.    0.]
 [   1.    0.    8.]]
Epoch: 180  Avg Train Loss: 0.833086296916008: loss, Avg Train Acc: 0.7185416666666666
Confusion matrix for training set
[[ 779.   41.    0.]
 [ 374.  285.    0.]
 [   8.    0.   31.]]

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Exp 6: Only on clean data  model_Exp6_01_10_2020-16_35_00_149.pt
J=8, Q=64
lr = 1e-4
Epoch: 140  Avg Train Loss: 0.6020410135388374: loss, Avg Train Acc: 0.9502597402597404
Confusion matrix for training set
[[ 408.   33.    0.]
 [   5.  299.    0.]
 [   0.    0.   32.]]


Near perfect classification 
Testing Accuracy 0.9527419354838709 Testing Loss 0.6033120155334473
Confusion Matrix for testing set:  
[[ 103.    7.    0.]
 [   2.   74.    0.]
 [   0.    0.    7.]]

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Exp 7: Wavelet transform averaged over time and freq 

[[ 634.  186.    0.]
 [ 205.  454.    0.]
 [  18.   21.    0.]]

More samples getting classified as noise, but decrease in earthquake identification. 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Exp 9: 

model_Exp9_03_10_2020-20_31_35_149.pt

self.conv1 = nn.Conv2d(3, 8, kernel_size=(5, 5), stride=2)
self.pool1 = nn.MaxPool2d(kernel_size=3)
self.conv2 = nn.Conv2d(8, 32, kernel_size=(3, 3), stride=1)
self.pool2 = nn.MaxPool2d(kernel_size=3)
self.fc1 = nn.Linear(9233, 1024)
self.fc2 = nn.Linear(1024, 128)
self.fc3 = nn.Linear(128, n_classes)

Testing Accuracy 0.8475324675324676 Testing Loss 0.7040304839611053
Confusion Matrix for testing set:  
[[ 183.   21.    0.]
 [  28.  136.    0.]
 [   5.    4.    0.]]
Epoch: 140  Avg Train Loss: 0.6944564953446388: loss, Avg Train Acc: 0.8529861111111111
Confusion matrix for training set
[[ 746.   74.    0.]
 [ 104.  555.    0.]
 [  16.   23.    0.]]

Segregates noise and noise much better 


Purely based on image net: (by just looking at the images)   model_Exp9_03_10_2020-21_24_37_149.pt

Testing Accuracy 0.8742857142857143 Testing Loss 0.6779804080724716
Confusion Matrix for testing set:  
[[ 177.   27.    0.]
 [  11.  153.    0.]
 [   4.    5.    0.]]
Epoch: 140  Avg Train Loss: 0.6557200849056244: loss, Avg Train Acc: 0.9068055555555556
Confusion matrix for training set
[[ 751.   69.    0.]
 [  32.  627.    0.]
 [  14.   25.    0.]]





------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Points from exp 7 and 9: As noise resolution increases, tremor resolution decreases 





